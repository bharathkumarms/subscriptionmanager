@model CEvery.Models.Subscription

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Subscription</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.SNo)

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CreatedDate, new { Value = Model.CreatedDate.ToString("dd MMM yyyy"), @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.CreatedDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubscriptionNo, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.SubscriptionNo)*@
                @Html.TextBoxFor(model => model.SubscriptionNo, new { maxlength = 26 })
                @Html.ValidationMessageFor(model => model.SubscriptionNo)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.CustomerName)*@
                @Html.TextBoxFor(model => model.CustomerName, new { maxlength = 26 })
                @Html.ValidationMessageFor(model => model.CustomerName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Type", new SelectList(ViewBag.TypeList, "Text", "Value"))
                @Html.ValidationMessageFor(model => model.Type)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address1, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Address1)*@
                @Html.TextBoxFor(model => model.Address1, new { maxlength = 26 })
                @Html.ValidationMessageFor(model => model.Address1)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address2, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Address2)*@
                @Html.TextBoxFor(model => model.Address2, new { maxlength = 26 })
                @Html.ValidationMessageFor(model => model.Address2)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address3, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Address3)*@
                @Html.TextBoxFor(model => model.Address3, new { maxlength = 26 })
                @Html.ValidationMessageFor(model => model.Address3)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.City)*@
                @Html.TextBoxFor(model => model.City, new { maxlength = 26 })
                @Html.ValidationMessageFor(model => model.City)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pin, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Pin)*@
                @Html.TextBoxFor(model => model.Pin, new { maxlength = 26 })
                @Html.ValidationMessageFor(model => model.Pin)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Phone)*@
                @Html.TextBoxFor(model => model.Phone, new { maxlength = 26 })
                @Html.ValidationMessageFor(model => model.Phone)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifiedDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ModifiedDate, new { Value = DateTime.Now.ToString("dd MMM yyyy"), @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.ModifiedDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comments)
                @Html.ValidationMessageFor(model => model.Comments)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DueDate, new { Value = Model.DueDate, @class = "date-picker txtDisableKeyPress" })
                @Html.ValidationMessageFor(model => model.DueDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsInvalid, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsInvalid)
                @Html.ValidationMessageFor(model => model.IsInvalid)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
